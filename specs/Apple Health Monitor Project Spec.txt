how would you approach creating a Windows executable dashboard with Python to analyze Apple Health Data? The data is processed into a Pandas table and stored as a CSV. I'd like to have the EXE take the CSV file and generate a collection of tabs that have different dashboards on them.

I'd like to have a Configuration tab where the user can select the following:
- Subset data on date range using field "creationDate".
- Subset data by combination of fields "sourceName and "type" representing the device the metric came from and the type of health metric.

Then I’d like dashboards that have different summaries of the various metrics:
- Daily metric summaries of average, min, max
- Weekly metric summaries of average, min, max
- Monthly metric summaries of average, min, max
- On daily summaries, compare to corresponding weekly and monthly statistics
- On weekly summaries, compare to corresponding monthly statistics
- If the data range is less than a month, display only daily and weekly statistics
- If the data range is less than a week, display only daily statistics

On each tab, I’d like to include a “Journal” feature to write notes on a specific day, week, month to provide some color commentary on the statistics.

Make the charts friendly and engaging, use warm welcome colors like a tan background with oranges and yellows for the main interface UI, with brown text. Make it inviting to use. Make the charts and the UI easy to follow and understand for nontechnical users who may not read charts often.

A small dataset for 2 months is available in `processed data/apple_data_subset.csv`

--------------


break down `.simone/03_SPRINTS/S03_M01_basic_analytics/S03_sprint_meta.md` into tasks for that sprint

review the task and flesh out approaches for implementation details that will help future development. Consider edge cases, testing, performance, and intuitiveness of UI and understandability of the analytics. Recommend best practices for UI building and best practices for analytics presentations. Make sure the analytics really shine and pop in this app, they are the most important feature by far. Consider any additional analytics that would be helpful and add it in as subtasks.

Create analytics in the style of Wall Street Journal (see for example `examples/wall street journal chart example 1.jpg` and `examples/wall street journal chart example 2.jpg`)


review `.simone/02_REQUIREMENTS/M01/SPECS_DB.md` database specification specifically for health data in light of the small data example in `processed data/apple_data_subset.csv` and recommend any changes to the database spec based on the available fields.

review the updated spec `.simone/02_REQUIREMENTS/M01/SPECS_DB.md` and make the implementation conform to the latest spec.


review the outstanding work in sprint `.simone/03_SPRINTS/S02_M01_Data_Processing/S02_sprint_meta.md` and create tasks for any remaining work. Partition the tasks for parallel work and create subtasks when the work needs to be completed together.


current:
G021_implement_monthly_metrics_calculator.md
G026_create_day_of_week_pattern_analysis.md
G025_add_daily_comparison_overlays.md

then:
G022_implement_analytics_caching_layer.md
G027_build_week_over_week_trends.md
G029_create_calendar_heatmap_component.md

then:
G028_add_monthly_context_to_weekly_view.md
G030_build_month_over_month_trends.md


then:
G031_identify_seasonal_patterns.md
G032_implement_adaptive_display_logic.md

then:
G033_create_smart_default_selection.md
G034_build_smooth_view_transitions.md
G035_design_data_availability_indicators.md


### Reusable Graphics Components ###
current:
G036_create_reusable_line_chart_component.md
G037_create_reusable_bar_chart_component.md

next:
G038_design_summary_card_components.md
G039_build_simple_table_components.md


next:
/do G008_Sprint_S02_Task_Breakdown.md see which steps remain in this task because it has been superseded by subsequent tasks, implement any remaining features, and report task status.



fix the following test errors, the tests still fail:



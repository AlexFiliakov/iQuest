============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.6.0 -- /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/venv/bin/python
cachedir: .pytest_cache
PyQt6 6.9.0 -- Qt runtime 6.9.0 -- Qt compiled 6.9.0
Test order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>
rootdir: /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports
configfile: pytest.ini
plugins: qt-4.4.0, random-order-1.1.1, reverse-1.8.0
collecting ... collected 209 items / 33 deselected / 176 selected

tests/unit/test_activity_timeline_insights.py::TestTimelineInsightsPanel::test_panel_creation PASSED [  0%]
tests/unit/test_activity_timeline_insights.py::TestTimelineInsightsPanel::test_update_insights PASSED [  1%]
tests/unit/test_activity_timeline_insights.py::TestTimelineInsightsPanel::test_pattern_transformation PASSED [  1%]
tests/unit/test_activity_timeline_insights.py::TestPatternRecognitionCard::test_card_creation PASSED [  2%]
tests/unit/test_activity_timeline_insights.py::TestPatternRecognitionCard::test_update_patterns PASSED [  2%]
tests/unit/test_activity_timeline_insights.py::TestPatternRecognitionCard::test_empty_patterns PASSED [  3%]
tests/unit/test_activity_timeline_insights.py::TestAnomalyAlertCard::test_card_creation PASSED [  3%]
tests/unit/test_activity_timeline_insights.py::TestAnomalyAlertCard::test_update_anomalies PASSED [  4%]
tests/unit/test_activity_timeline_insights.py::TestAnomalyAlertCard::test_anomaly_dismissal PASSED [  5%]
tests/unit/test_activity_timeline_insights.py::TestAnomalyAlertCard::test_time_formatting PASSED [  5%]
tests/unit/test_activity_timeline_insights.py::TestActivityHeatmapWidget::test_widget_creation PASSED [  6%]
tests/unit/test_activity_timeline_insights.py::TestActivityHeatmapWidget::test_update_data PASSED [  6%]
tests/unit/test_activity_timeline_insights.py::TestActivityHeatmapWidget::test_empty_data PASSED [  7%]
tests/unit/test_activity_timeline_insights.py::TestActivityHeatmapWidget::test_grid_dimensions PASSED [  7%]
tests/unit/test_auto_save_manager.py::TestDebouncedTimer::test_force_trigger PASSED [  8%]
tests/unit/test_auto_save_manager.py::TestDebouncedTimer::test_max_wait_enforcement PASSED [  9%]
tests/unit/test_auto_save_manager.py::TestDebouncedTimer::test_rapid_resets_debounce_properly PASSED [  9%]
tests/unit/test_auto_save_manager.py::TestDebouncedTimer::test_single_reset_triggers_after_delay PASSED [ 10%]
tests/unit/test_auto_save_manager.py::TestDebouncedTimer::test_stop_cancels_pending_triggers PASSED [ 10%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_configuration_methods PASSED [ 11%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_content_change_triggers_debounce PASSED [ 11%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_content_hash_calculation PASSED [ 12%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_disabled_auto_save PASSED [ 13%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_draft_saving PASSED [ 13%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_empty_content_ignored PASSED [ 14%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_force_save PASSED [ 14%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_identical_content_ignored PASSED [ 15%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_initial_state PASSED [ 15%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_performance_stats PASSED [ 16%]
tests/unit/test_auto_save_manager.py::TestAutoSaveManager::test_save_completion_handling PASSED [ 17%]
tests/unit/test_auto_save_manager.py::TestSaveWorker::test_max_retries_exceeded PASSED [ 17%]
tests/unit/test_auto_save_manager.py::TestSaveWorker::test_no_data_error PASSED [ 18%]
tests/unit/test_auto_save_manager.py::TestSaveWorker::test_retry_logic PASSED [ 18%]
tests/unit/test_auto_save_manager.py::TestSaveWorker::test_save_data_setting PASSED [ 19%]
tests/unit/test_auto_save_manager.py::TestSaveWorker::test_successful_save PASSED [ 19%]
tests/unit/test_journal_exporters.py::TestJSONExporter::test_export_basic PASSED [ 20%]
tests/unit/test_journal_exporters.py::TestJSONExporter::test_export_empty_entries PASSED [ 21%]
tests/unit/test_journal_exporters.py::TestJSONExporter::test_export_statistics PASSED [ 21%]
tests/unit/test_journal_exporters.py::TestJSONExporter::test_export_with_max_entries PASSED [ 22%]
tests/unit/test_journal_exporters.py::TestJSONExporter::test_export_with_options PASSED [ 22%]
tests/unit/test_journal_exporters.py::TestPDFExporter::test_pdf_export_basic SKIPPED [ 23%]
tests/unit/test_journal_exporters.py::TestPDFExporter::test_pdf_export_with_options SKIPPED [ 23%]
tests/unit/test_journal_exporters.py::TestPDFExporter::test_pdf_markdown_parsing SKIPPED [ 24%]
tests/unit/test_journal_exporters.py::TestExportDialog::test_dialog_initialization PASSED [ 25%]
tests/unit/test_journal_exporters.py::TestExportDialog::test_format_switching PASSED [ 25%]
tests/unit/test_journal_exporters.py::TestExportDialog::test_json_options PASSED [ 26%]
tests/unit/test_journal_exporters.py::TestExportDialog::test_pdf_options PASSED [ 26%]
tests/unit/test_journal_exporters.py::TestDateRangeSelector::test_custom_range PASSED [ 27%]
tests/unit/test_journal_exporters.py::TestDateRangeSelector::test_entry_count_update PASSED [ 27%]
tests/unit/test_journal_exporters.py::TestDateRangeSelector::test_preset_selection PASSED [ 28%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_widget_initialization PASSED [ 28%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_load_entries FAILED [ 29%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_filter_by_type PASSED [ 30%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_sort_order PASSED [ 30%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_entry_selection FAILED [ 31%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_entry_edit_signal PASSED [ 31%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_entry_delete PASSED [ 32%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_view_mode_change PASSED [ 32%]
tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_status_update PASSED [ 33%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_model_initialization PASSED [ 34%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_row_count FAILED [ 34%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_data_roles FAILED [ 35%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_can_fetch_more PASSED [ 35%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_fetch_more FAILED [ 36%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_filter_application PASSED [ 36%]
tests/unit/test_journal_history.py::TestJournalHistoryModel::test_sort_order PASSED [ 37%]
tests/unit/test_journal_history.py::TestJournalEntryDelegate::test_delegate_initialization PASSED [ 38%]
tests/unit/test_journal_history.py::TestJournalEntryDelegate::test_size_hint PASSED [ 38%]
tests/unit/test_journal_history.py::TestFilterToolbar::test_toolbar_initialization PASSED [ 39%]
tests/unit/test_journal_history.py::TestFilterToolbar::test_filter_signal_emission FAILED [ 39%]
tests/unit/test_journal_history.py::TestFilterToolbar::test_sort_change PASSED [ 40%]
tests/unit/test_journal_history.py::TestPreviewPanel::test_panel_initialization PASSED [ 40%]
tests/unit/test_journal_history.py::TestPreviewPanel::test_set_entry PASSED [ 41%]
tests/unit/test_journal_history.py::TestPreviewPanel::test_edit_signal PASSED [ 42%]
tests/unit/test_journal_history.py::TestPreviewPanel::test_delete_signal PASSED [ 42%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_creation PASSED [ 43%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_with_multiple_entries PASSED [ 43%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_hover_effect PASSED [ 44%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_click_signal PASSED [ 44%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_accessibility PASSED [ 45%]
tests/unit/test_journal_indicators.py::TestJournalIndicator::test_indicator_update PASSED [ 46%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_service_initialization PASSED [ 46%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_get_indicators_for_date_range PASSED [ 47%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_get_indicator_for_specific_date PASSED [ 47%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_cache_functionality PASSED [ 48%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_entry_saved_update PASSED [ 48%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorService::test_preview_text_extraction PASSED [ 49%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_mixin_initialization PASSED [ 50%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_add_indicator_to_widget FAILED [ 50%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_indicator_click_handling FAILED [ 51%]
tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_refresh_indicators PASSED [ 51%]
tests/unit/test_journal_indicators.py::TestEnhancedCalendarHeatmap::test_enhanced_heatmap_creation PASSED [ 52%]
tests/unit/test_journal_indicators.py::TestEnhancedCalendarHeatmap::test_heatmap_without_journal_support PASSED [ 52%]
tests/unit/test_journal_indicators.py::TestEnhancedCalendarHeatmap::test_indicator_creation_on_paint FAILED [ 53%]
tests/unit/test_journal_search.py::TestQueryParser::test_excluded_terms PASSED [ 53%]
tests/unit/test_journal_search.py::TestQueryParser::test_fts_query_generation PASSED [ 54%]
tests/unit/test_journal_search.py::TestQueryParser::test_mixed_query PASSED [ 55%]
tests/unit/test_journal_search.py::TestQueryParser::test_phrase_matching PASSED [ 55%]
tests/unit/test_journal_search.py::TestQueryParser::test_simple_terms PASSED [ 56%]
tests/unit/test_journal_search.py::TestQueryParser::test_wildcard_terms PASSED [ 56%]
tests/unit/test_journal_search.py::TestSearchScoring::test_hybrid_scoring PASSED [ 57%]
tests/unit/test_journal_search.py::TestSearchScoring::test_recency_scoring PASSED [ 57%]
tests/unit/test_journal_search.py::TestHighlighting::test_case_insensitive_highlight PASSED [ 58%]
tests/unit/test_journal_search.py::TestHighlighting::test_multiple_highlights PASSED [ 59%]
tests/unit/test_journal_search.py::TestHighlighting::test_simple_highlight PASSED [ 59%]
tests/unit/test_journal_search.py::TestHighlighting::test_wildcard_highlight PASSED [ 60%]
tests/unit/test_journal_search.py::TestSearchCache::test_cache_key_generation PASSED [ 60%]
tests/unit/test_journal_search.py::TestSearchCache::test_cache_with_filters PASSED [ 61%]
tests/unit/test_journal_search.py::TestSearchIntegration::test_empty_search_results PASSED [ 61%]
tests/unit/test_journal_search.py::TestSearchIntegration::test_search_with_mock_db PASSED [ 62%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_panel_initialization PASSED [ 63%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_default_date_range PASSED [ 63%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_entry_type_checkboxes PASSED [ 64%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_get_filters FAILED [ 64%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_filter_change_signal PASSED [ 65%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_preset_buttons PASSED [ 65%]
tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_clear_date_filter PASSED [ 66%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_search_bar_initialization FAILED [ 67%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_placeholder_text PASSED [ 67%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_search_debouncing PASSED [ 68%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_immediate_search_on_enter PASSED [ 68%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_clear_button_functionality FAILED [ 69%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_filter_button_menu FAILED [ 69%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_result_count_display FAILED [ 70%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_search_suggestions PASSED [ 71%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_keyboard_shortcuts FAILED [ 71%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_get_filters_from_panel FAILED [ 72%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_focus_search_method FAILED [ 72%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_empty_search_not_emitted PASSED [ 73%]
tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_filter_change_updates FAILED [ 73%]
tests/unit/test_journal_search_widget.py::TestSearchWorker::test_worker_initialization PASSED [ 74%]
tests/unit/test_journal_search_widget.py::TestSearchWorker::test_set_search_params PASSED [ 75%]
tests/unit/test_journal_search_widget.py::TestSearchWorker::test_cancel_operation PASSED [ 75%]
tests/unit/test_journal_search_widget.py::TestSearchWorker::test_run_success PASSED [ 76%]
tests/unit/test_journal_search_widget.py::TestSearchWorker::test_run_with_error PASSED [ 76%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_widget_initialization PASSED [ 77%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_progress_bar_initially_hidden PASSED [ 77%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_search_request_handling PASSED [ 78%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_empty_query_ignored PASSED [ 78%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_ongoing_search_cancelled PASSED [ 79%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_results_handling PASSED [ 80%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_pagination_handling PASSED [ 80%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_error_handling PASSED [ 81%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_progress_updates PASSED [ 81%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_clear_search PASSED [ 82%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_load_more_results PASSED [ 82%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_no_more_results_prevents_loading PASSED [ 83%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_filter_change_triggers_search PASSED [ 84%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_focus_search PASSED [ 84%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_set_initial_query PASSED [ 85%]
tests/unit/test_journal_search_widget.py::TestJournalSearchWidget::test_signal_connections PASSED [ 85%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_initialization SKIPPED [ 86%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_ui_structure SKIPPED [ 86%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_new_entry_button SKIPPED [ 87%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_signal_connections SKIPPED [ 88%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_load_entry SKIPPED [ 88%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_load_entry_error_handling SKIPPED [ 89%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_on_entry_saved SKIPPED [ 89%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_on_entry_deleted_current SKIPPED [ 90%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_on_entry_deleted_other SKIPPED [ 90%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_refresh_method SKIPPED [ 91%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_search_result_selection SKIPPED [ 92%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_history_entry_selection SKIPPED [ 92%]
tests/unit/test_journal_tab_widget.py::TestJournalTabWidget::test_splitter_sizes SKIPPED [ 93%]
tests/unit/test_xml_streaming_processor_memory.py::TestMemoryLimitValidation::test_valid_memory_limits PASSED [ 93%]
tests/unit/test_xml_streaming_processor_memory.py::TestMemoryLimitValidation::test_memory_limit_too_low PASSED [ 94%]
tests/unit/test_xml_streaming_processor_memory.py::TestMemoryLimitValidation::test_memory_limit_too_high PASSED [ 94%]
tests/unit/test_xml_streaming_processor_memory.py::TestMemoryLimitValidation::test_memory_limit_edge_cases PASSED [ 95%]
tests/unit/test_xml_streaming_processor_memory.py::TestMemoryMonitorValidation::test_memory_monitor_accepts_valid_limits PASSED [ 96%]
tests/unit/test_xml_streaming_processor_validation.py::TestMemoryMonitorValidation::test_valid_memory_limits PASSED [ 96%]
tests/unit/test_xml_streaming_processor_validation.py::TestMemoryMonitorValidation::test_memory_limit_too_low PASSED [ 97%]
tests/unit/test_xml_streaming_processor_validation.py::TestMemoryMonitorValidation::test_memory_limit_too_high PASSED [ 97%]
tests/unit/test_xml_streaming_processor_validation.py::TestXMLStreamingProcessorValidation::test_valid_memory_limits PASSED [ 98%]
tests/unit/test_xml_streaming_processor_validation.py::TestXMLStreamingProcessorValidation::test_memory_limit_too_low PASSED [ 98%]
tests/unit/test_xml_streaming_processor_validation.py::TestXMLStreamingProcessorValidation::test_memory_limit_too_high PASSED [ 99%]
tests/unit/test_xml_streaming_processor_validation.py::TestXMLStreamingProcessorValidation::test_edge_cases PASSED [100%]

=================================== FAILURES ===================================
__________________ TestJournalHistoryWidget.test_load_entries __________________

self = <test_journal_history.TestJournalHistoryWidget object at 0x7fceaaa87170>
history_widget = <src.ui.journal_history_widget.JournalHistoryWidget object at 0x7fceaa7b74d0>
mock_journal_db = <Mock id='140525600060384'>

    def test_load_entries(self, history_widget, mock_journal_db):
        """Test loading entries from database."""
        history_widget.load_entries()
    
        # Check model has entries
>       assert history_widget.model.rowCount() > 0
E       assert 0 > 0
E        +  where 0 = rowCount()
E        +    where rowCount = <src.ui.journal_history_widget.JournalHistoryModel object at 0x7fceaa7b40f0>.rowCount
E        +      where <src.ui.journal_history_widget.JournalHistoryModel object at 0x7fceaa7b40f0> = <src.ui.journal_history_widget.JournalHistoryWidget object at 0x7fceaa7b74d0>.model

tests/unit/test_journal_history.py:119: AssertionError
________________ TestJournalHistoryWidget.test_entry_selection _________________

self = <test_journal_history.TestJournalHistoryWidget object at 0x7fceaaa87770>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa91f980>
history_widget = <src.ui.journal_history_widget.JournalHistoryWidget object at 0x7fceaa762530>

    def test_entry_selection(self, qtbot, history_widget):
        """Test selecting entry shows preview."""
        # Click first entry
        index = history_widget.model.index(0, 0)
        history_widget.on_entry_clicked(index)
    
        # Check preview panel shown
>       assert history_widget.preview_panel.isVisible()
E       assert False
E        +  where False = <built-in method isVisible of PreviewPanel object at 0x7fceaa65e170>()
E        +    where <built-in method isVisible of PreviewPanel object at 0x7fceaa65e170> = <src.ui.journal_history_widget.PreviewPanel object at 0x7fceaa65e170>.isVisible
E        +      where <src.ui.journal_history_widget.PreviewPanel object at 0x7fceaa65e170> = <src.ui.journal_history_widget.JournalHistoryWidget object at 0x7fceaa762530>.preview_panel

tests/unit/test_journal_history.py:149: AssertionError
____________________ TestJournalHistoryModel.test_row_count ____________________

self = <test_journal_history.TestJournalHistoryModel object at 0x7fceaaa9c320>
mock_journal_db = <Mock id='140525598840384'>

    def test_row_count(self, mock_journal_db):
        """Test row count returns correct value."""
        model = JournalHistoryModel(mock_journal_db)
        model.refresh()
    
>       assert model.rowCount() == 3
E       assert 0 == 3
E        +  where 0 = rowCount()
E        +    where rowCount = <src.ui.journal_history_widget.JournalHistoryModel object at 0x7fceaa762df0>.rowCount

tests/unit/test_journal_history.py:199: AssertionError
___________________ TestJournalHistoryModel.test_data_roles ____________________

self = <test_journal_history.TestJournalHistoryModel object at 0x7fceaaa9c4d0>
mock_journal_db = <Mock id='140525598836880'>

    def test_data_roles(self, mock_journal_db):
        """Test data retrieval for different roles."""
        model = JournalHistoryModel(mock_journal_db)
        model.refresh()
    
        index = model.index(0, 0)
    
        # Test display role
        display_text = model.data(index, Qt.ItemDataRole.DisplayRole)
>       assert display_text == "First entry content"
E       AssertionError: assert None == 'First entry content'

tests/unit/test_journal_history.py:210: AssertionError
___________________ TestJournalHistoryModel.test_fetch_more ____________________

self = <test_journal_history.TestJournalHistoryModel object at 0x7fceaaa9c830>
mock_journal_db = <Mock id='140525598843360'>

    def test_fetch_more(self, mock_journal_db):
        """Test fetching additional entries."""
        model = JournalHistoryModel(mock_journal_db)
        model.chunk_size = 2
        model.refresh()
    
        initial_count = model.rowCount()
    
        if model.canFetchMore():
            model.fetchMore()
>           assert model.rowCount() > initial_count
E           assert 0 > 0
E            +  where 0 = rowCount()
E            +    where rowCount = <src.ui.journal_history_widget.JournalHistoryModel object at 0x7fceaa65d270>.rowCount

tests/unit/test_journal_history.py:248: AssertionError
________________ TestFilterToolbar.test_filter_signal_emission _________________

self = <test_journal_history.TestFilterToolbar object at 0x7fceaaa9cad0>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa6605c0>

    def test_filter_signal_emission(self, qtbot):
        """Test filter change signal."""
        toolbar = FilterToolbar()
        qtbot.addWidget(toolbar)
    
>       with qtbot.waitSignal(toolbar.filtersChanged) as blocker:
E       pytestqt.exceptions.TimeoutError: Signal filtersChanged(PyQt_PyObject) not emitted after 5000 ms

tests/unit/test_journal_history.py:322: TimeoutError
____________ TestJournalIndicatorMixin.test_add_indicator_to_widget ____________

self = <test_journal_indicators.TestJournalIndicatorMixin object at 0x7fceaaae1100>
app = <PyQt6.QtWidgets.QApplication object at 0x7fceaa81a530>
mock_data_access = <Mock id='140525598861808'>

>   ???
E   assert 0 == 1
E    +  where 0 = len({})
E    +    where {} = <test_journal_indicators.DashboardWidgetForTesting object at 0x7fceaa763930>._active_indicators

tests/unit/test_journal_indicators.py:334: AssertionError
___________ TestJournalIndicatorMixin.test_indicator_click_handling ____________

self = <test_journal_indicators.TestJournalIndicatorMixin object at 0x7fceaaa9fd10>
app = <PyQt6.QtWidgets.QApplication object at 0x7fceaa81a530>
mock_data_access = <Mock id='140525598859264'>

>   ???
E   IndexError: list index out of range

tests/unit/test_journal_indicators.py:361: IndexError
_________ TestEnhancedCalendarHeatmap.test_indicator_creation_on_paint _________

self = <test_journal_indicators.TestEnhancedCalendarHeatmap object at 0x7fceaaae0080>
mock_indicator_class = <MagicMock name='JournalIndicator' id='140525599168016'>
app = <PyQt6.QtWidgets.QApplication object at 0x7fceaa81a530>
mock_data_access = <Mock id='140525599167200'>

>   ???

tests/unit/test_journal_indicators.py:424: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.ui.charts.calendar_heatmap_enhanced.EnhancedCalendarHeatmap object at 0x7fceaa7b4410>

    def _paint_journal_indicators(self):
        """Paint journal indicators on tracked cells."""
        if not self._cell_rects:
            return
    
        # Get date range from tracked cells
        if self._cell_rects:
            dates = list(self._cell_rects.keys())
            start_date = min(dates)
            end_date = max(dates)
    
            # Get journal indicators for the date range
            indicators = self._indicator_service.get_indicators_for_date_range(
                start_date, end_date
            )
    
            # Create painter for indicators
            painter = QPainter(self)
            painter.setRenderHint(QPainter.RenderHint.Antialiasing)
    
            # Draw indicators on cells
            for date_key, indicator_data in indicators.items():
                # Parse date from key
                if '_' in date_key:
                    date_str = date_key.split('_')[0]
                    entry_type = date_key.split('_')[1] if '_' in date_key else 'daily'
                else:
                    date_str = date_key
                    entry_type = indicator_data.entry_type
    
                target_date = date.fromisoformat(date_str)
    
                # Find cell rectangle for this date
                if target_date in self._cell_rects:
                    cell_rect = self._cell_rects[target_date]
    
                    # Create or update indicator widget
>                   self._create_cell_indicator(cell_rect, target_date, indicator_data)

src/ui/charts/calendar_heatmap_enhanced.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.ui.charts.calendar_heatmap_enhanced.EnhancedCalendarHeatmap object at 0x7fceaa7b4410>
cell_rect = <MagicMock id='140525599171952'>
target_date = datetime.date(2024, 1, 15)
indicator_data = IndicatorData(date_key='2024-01-15', entry_type='daily', count=2, preview_text='Second entry for today.', entry_ids=[2, 1])

    def _create_cell_indicator(self, cell_rect: QRect, target_date: date, indicator_data):
        """Create a journal indicator for a calendar cell.
    
        Args:
            cell_rect: Rectangle of the calendar cell
            target_date: Date for the indicator
            indicator_data: Journal indicator data
        """
        # Generate unique key for this indicator
        indicator_key = f"{target_date.isoformat()}_{indicator_data.entry_type}"
    
        # Check if indicator already exists
        if indicator_key in self._rendered_indicators:
            indicator = self._rendered_indicators[indicator_key]
            # Update existing indicator
            indicator.update_indicator(
                count=indicator_data.count,
                preview_text=indicator_data.preview_text
            )
            # Reposition if needed
            self._position_cell_indicator(indicator, cell_rect)
        else:
            # Create new indicator
            indicator = JournalIndicator(
                entry_type=indicator_data.entry_type,
                count=indicator_data.count,
                preview_text=indicator_data.preview_text,
                parent=self
            )
    
            # Position the indicator
>           self._position_cell_indicator(indicator, cell_rect)

src/ui/charts/calendar_heatmap_enhanced.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.ui.charts.calendar_heatmap_enhanced.EnhancedCalendarHeatmap object at 0x7fceaa7b4410>
indicator = <MagicMock name='JournalIndicator()' id='140525603242976'>
cell_rect = <MagicMock id='140525599171952'>

    def _position_cell_indicator(self, indicator: JournalIndicator, cell_rect: QRect):
        """Position an indicator within a calendar cell.
    
        Args:
            indicator: The journal indicator widget
            cell_rect: Rectangle of the calendar cell
        """
        # Position in top-right corner of cell with small margin
        margin = 2
        indicator_size = 12  # Smaller size for calendar cells
    
        # Resize indicator for calendar view
        indicator.setFixedSize(indicator_size, indicator_size)
    
        # Calculate position
        x = cell_rect.right() - indicator_size - margin
        y = cell_rect.top() + margin
    
        # Ensure indicator stays within cell bounds
>       x = max(cell_rect.left() + margin, x)
E       TypeError: '>' not supported between instances of 'MagicMock' and 'MagicMock'

src/ui/charts/calendar_heatmap_enhanced.py:217: TypeError
----------------------------- Captured Qt messages -----------------------------
QtWarningMsg: QWidget::paintEngine: Should no longer be called
QtWarningMsg: QPainter::begin: Paint device returned engine == 0, type: 1
QtWarningMsg: QPainter::setRenderHint: Painter must be active to set rendering hints
____________________ TestSearchFilterPanel.test_get_filters ____________________

self = <test_journal_search_bar.TestSearchFilterPanel object at 0x7fceaa84f1a0>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa730290>

    def test_get_filters(self, qtbot):
        """Test getting filter configuration."""
        panel = SearchFilterPanel()
        qtbot.addWidget(panel)
    
        # Set some filters
        panel.date_from.setDate(QDate(2024, 1, 1))
        panel.date_to.setDate(QDate(2024, 1, 31))
        panel.type_checkboxes['weekly'].setChecked(False)
        panel.sort_combo.setCurrentText("Oldest First")
    
        filters = panel.get_filters()
    
        assert filters['date_from'] == date(2024, 1, 1)
        assert filters['date_to'] == date(2024, 1, 31)
        assert filters['entry_types'] == ['daily', 'monthly']
>       assert filters['sort_order'] == 'oldest'
E       KeyError: 'sort_order'

tests/unit/test_journal_search_bar.py:79: KeyError
_____________ TestJournalSearchBar.test_search_bar_initialization ______________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa84f830>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa730b60>

    def test_search_bar_initialization(self, qtbot):
        """Test search bar initialization."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        assert search_bar.search_input is not None
        assert search_bar.filter_button is not None
>       assert search_bar.clear_button is not None
E       AttributeError: 'JournalSearchBar' object has no attribute 'clear_button'. Did you mean: 'filter_button'?

tests/unit/test_journal_search_bar.py:162: AttributeError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
_____________ TestJournalSearchBar.test_clear_button_functionality _____________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa84ff80>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa737440>

    def test_clear_button_functionality(self, qtbot):
        """Test clear button clears search."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Set search text
        search_bar.search_input.setText("test search")
        search_bar.update_result_count(5)
    
        # Connect signal spy
        clear_signal = []
        search_bar.clearRequested.connect(clear_signal.append)
    
        # Click clear
>       qtbot.mouseClick(search_bar.clear_button, Qt.MouseButton.LeftButton)
E       AttributeError: 'JournalSearchBar' object has no attribute 'clear_button'. Did you mean: 'filter_button'?

tests/unit/test_journal_search_bar.py:230: AttributeError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
_________________ TestJournalSearchBar.test_filter_button_menu _________________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa84fbf0>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa737e60>

    def test_filter_button_menu(self, qtbot):
        """Test filter button shows menu."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Check menu exists
>       assert search_bar.filter_button.menu() is not None
E       assert None is not None
E        +  where None = <built-in method menu of QPushButton object at 0x7fceaa763250>()
E        +    where <built-in method menu of QPushButton object at 0x7fceaa763250> = <PyQt6.QtWidgets.QPushButton object at 0x7fceaa763250>.menu
E        +      where <PyQt6.QtWidgets.QPushButton object at 0x7fceaa763250> = <src.ui.journal_search_bar.JournalSearchBar object at 0x7fceaa65f890>.filter_button

tests/unit/test_journal_search_bar.py:242: AssertionError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
________________ TestJournalSearchBar.test_result_count_display ________________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa84f530>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa7047d0>

    def test_result_count_display(self, qtbot):
        """Test result count label update."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Initially hidden
        assert not search_bar.result_label.isVisible()
    
        # Update count
        search_bar.update_result_count(42)
    
        # Check visible and text
>       assert search_bar.result_label.isVisible()
E       assert False
E        +  where False = <built-in method isVisible of QLabel object at 0x7fceaa762490>()
E        +    where <built-in method isVisible of QLabel object at 0x7fceaa762490> = <PyQt6.QtWidgets.QLabel object at 0x7fceaa762490>.isVisible
E        +      where <PyQt6.QtWidgets.QLabel object at 0x7fceaa762490> = <src.ui.journal_search_bar.JournalSearchBar object at 0x7fceaa763bb0>.result_label

tests/unit/test_journal_search_bar.py:263: AssertionError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
_________________ TestJournalSearchBar.test_keyboard_shortcuts _________________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa84edb0>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa737a70>

    def test_keyboard_shortcuts(self, qtbot):
        """Test keyboard shortcuts."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Test Escape clears search
        search_bar.search_input.setText("test")
        qtbot.keyClick(search_bar.search_input, Qt.Key.Key_Escape)
>       assert search_bar.search_input.text() == ""
E       AssertionError: assert 'test' == ''
E         
E         + test

tests/unit/test_journal_search_bar.py:299: AssertionError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
_______________ TestJournalSearchBar.test_get_filters_from_panel _______________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa844110>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa730440>

    def test_get_filters_from_panel(self, qtbot):
        """Test getting filters from filter panel."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Set some filters in panel
>       search_bar.filter_panel.type_checkboxes['monthly'].setChecked(False)
E       AttributeError: 'JournalSearchBar' object has no attribute 'filter_panel'. Did you mean: '_filter_panel'?

tests/unit/test_journal_search_bar.py:307: AttributeError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
________________ TestJournalSearchBar.test_focus_search_method _________________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa844290>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa7124e0>

    def test_focus_search_method(self, qtbot):
        """Test focus_search method."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        # Focus something else first
        search_bar.filter_button.setFocus()
        assert not search_bar.search_input.hasFocus()
    
        # Focus search
        search_bar.focus_search()
    
        # Check focused and selected
>       assert search_bar.search_input.hasFocus()
E       assert False
E        +  where False = <built-in method hasFocus of QLineEdit object at 0x7fceaa65d3b0>()
E        +    where <built-in method hasFocus of QLineEdit object at 0x7fceaa65d3b0> = <PyQt6.QtWidgets.QLineEdit object at 0x7fceaa65d3b0>.hasFocus
E        +      where <PyQt6.QtWidgets.QLineEdit object at 0x7fceaa65d3b0> = <src.ui.journal_search_bar.JournalSearchBar object at 0x7fceaa65def0>.search_input

tests/unit/test_journal_search_bar.py:328: AssertionError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
_______________ TestJournalSearchBar.test_filter_change_updates ________________

self = <test_journal_search_bar.TestJournalSearchBar object at 0x7fceaa844590>
qtbot = <pytestqt.qtbot.QtBot object at 0x7fceaa711b20>

    def test_filter_change_updates(self, qtbot):
        """Test that filter changes emit signal."""
        search_bar = JournalSearchBar()
        qtbot.addWidget(search_bar)
    
        filter_signal = []
        search_bar.filtersChanged.connect(filter_signal.append)
    
        # Change filter in panel
>       search_bar.filter_panel.sort_combo.setCurrentIndex(1)
E       AttributeError: 'JournalSearchBar' object has no attribute 'filter_panel'. Did you mean: '_filter_panel'?

tests/unit/test_journal_search_bar.py:354: AttributeError
--------------------------- Captured stderr teardown ---------------------------
Unknown property transform
=============================== warnings summary ===============================
tests/unit/test_journal_editor.py:44
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_editor.py:44: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_history.py:104
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_history.py:104: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_history.py:182
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_history.py:182: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_history.py:276
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_history.py:276: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_history.py:305
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_history.py:305: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_history.py:340
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_history.py:340: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_manager.py:128
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_manager.py:128: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_search_bar.py:23
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_search_bar.py:23: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_search_bar.py:151
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_search_bar.py:151: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_search_widget.py:60
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_search_widget.py:60: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_search_widget.py:144
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_search_widget.py:144: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

tests/unit/test_journal_tab_widget.py:58
  /mnt/c/Users/alexf/OneDrive/Documents/Projects/Apple Health Exports/tests/unit/test_journal_tab_widget.py:58: PytestUnknownMarkWarning: Unknown pytest.mark.ui - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.ui

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_load_entries
FAILED tests/unit/test_journal_history.py::TestJournalHistoryWidget::test_entry_selection
FAILED tests/unit/test_journal_history.py::TestJournalHistoryModel::test_row_count
FAILED tests/unit/test_journal_history.py::TestJournalHistoryModel::test_data_roles
FAILED tests/unit/test_journal_history.py::TestJournalHistoryModel::test_fetch_more
FAILED tests/unit/test_journal_history.py::TestFilterToolbar::test_filter_signal_emission
FAILED tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_add_indicator_to_widget
FAILED tests/unit/test_journal_indicators.py::TestJournalIndicatorMixin::test_indicator_click_handling
FAILED tests/unit/test_journal_indicators.py::TestEnhancedCalendarHeatmap::test_indicator_creation_on_paint
FAILED tests/unit/test_journal_search_bar.py::TestSearchFilterPanel::test_get_filters
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_search_bar_initialization
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_clear_button_functionality
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_filter_button_menu
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_result_count_display
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_keyboard_shortcuts
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_get_filters_from_panel
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_focus_search_method
FAILED tests/unit/test_journal_search_bar.py::TestJournalSearchBar::test_filter_change_updates
= 18 failed, 142 passed, 16 skipped, 33 deselected, 12 warnings in 96.65s (0:01:36) =
